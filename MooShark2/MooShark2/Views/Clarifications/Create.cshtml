<!--model MooShark2.clarification -->
@model MooShark2.Models.ClarificationsEmptyViewModel
@{
    ViewBag.Title = "Clarifications";
}
<main class="cont">
    <div class="row nobot">
        <div class="col s6">
            <h3><span class="amber lighten-1 amber-text text-lighten-1 heading">_</span><span class="heading heading-text">Clarifications</span></h3>
        </div>
        <div class="col s6">
            <a class="right waves-effect blue lighten-1 waves-light btn backButton"><i class="material-icons left">navigate_before</i>back</a>
        </div>
    </div>
    <div class="row">
        <a class="btn-floating btn-large waves-effect waves-light cyan right modal-trigger tooltipped" data-tooltip="Add Question" href="#newClarificationModal">
            <i class="material-icons add_fab">add</i>
        </a>
        <div class="col s12 m12">
           
            <ul class="collection z-depth-1">
                <li class="collection-item avatar hover">
                    <div class="row nobot">
                        <div class="title truncate">No questions have been posted</div>
                    </div>
                </li>
            </ul>
        </div>
                                    <!--
                                    using (Html.BeginForm())
                                    {
                                        Html.AntiForgeryToken()

                                        <div class="form-horizontal">
                                            <h4>clarification</h4>
                                            <hr />
                                            Html.ValidationSummary(true, "", new { class = "text-danger" })
                                            <div class="form-group">
                                                Html.LabelFor(model => model.authorId, htmlAttributes: new { class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    Html.EditorFor(model => model.authorId, new { htmlAttributes = new { class = "form-control" } })
                                                    Html.ValidationMessageFor(model => model.authorId, "", new { class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                Html.LabelFor(model => model.message, htmlAttributes: new { class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    Html.EditorFor(model => model.message, new { htmlAttributes = new { class = "form-control" } })
                                                    Html.ValidationMessageFor(model => model.message, "", new { class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                Html.LabelFor(model => model.posted, htmlAttributes: new { class = "control-label col-md-2" })
                                                <div class="col-md-10">
                                                    Html.EditorFor(model => model.posted, new { htmlAttributes = new { class = "form-control" } })
                                                    Html.ValidationMessageFor(model => model.posted, "", new { class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="form-group">
                                                <div class="col-md-offset-2 col-md-10">
                                                    <input type="submit" value="Create" class="btn btn-default" />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                        -->
                                    <!--
                                    <div>
                                        Html.ActionLink("Back to List", "Index")
                                    </div>

                                    section Scripts {
                                        Scripts.Render("~/bundles/jqueryval")
                                    }-->
                                </div>
                            </div>
</main>


@if (Model.currentUser.roleId >= 1)
{
    <div id="newClarificationModal" class="modal">
        <div class="modal-content" style="max-height: 70vh; overflow-y: scroll;">

            <div class="row nobot">
                <h4 class="modal-header blue-text">Submit a new quesion</h4>
                <form id="newClarificationQuestionForm" class="col s12" action="/Clarifications/SubmitQuestion">
                    <div class="row">
                        <div class="input-field col s12">
                            <textarea id="newQuestion" class="materialize-textarea" length="500" name="newQuestion"></textarea>
                            <label for="newQuestion">Description</label>
                            <span class="character-counter" style="float: right; font-size: 12px; height: 1px;"></span>
                        </div>
                    </div>
                    <input class="hidden" id="problemId" name="problemId" value="@Model.pId" style="visibility:hidden;" />
                    <input type="submit" value="Submit" class="modal-submit modal-action waves-effect waves-blue green btn right" />
                </form>
            </div>
        </div>
    </div>
}